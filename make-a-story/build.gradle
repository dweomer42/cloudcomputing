plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'distribution'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    implementation files('mssql-jdbc-12.6.1.jre11.jar')

    // https://mvnrepository.com/artifact/org.apache.hive/hive-jdbc
    implementation group: 'org.apache.hive', name: 'hive-jdbc', version: '3.1.3'



    implementation 'com.google.code.gson:gson:2.8.5'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'



    // SQL driver

    // https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc
    implementation group: 'com.microsoft.sqlserver', name: 'mssql-jdbc', version: '12.6.1.jre11'

    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    //implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.45.2.0'


    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    //implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.3.0'




    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile 'com.openfaas:model:0.1.1'
    compile 'com.openfaas:entrypoint:0.1.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    flatDir {
        dirs '../libs'
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'OpenFaaS Function',
                   'Implementation-Version': '1.0'
    }
}


distributions {
    main {
        contents {
            from jar
            into('lib') {
                from(project.configurations.runtime)
            }
        }
    }
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
